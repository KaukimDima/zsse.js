{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "px-app-nav-item.es6.js",
      "properties": [
        {
          "name": "item",
          "type": "Object",
          "description": "A reference the object used to create this nav item.",
          "privacy": "public",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 16,
              "column": 6
            },
            "end": {
              "line": 18,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "label",
          "type": "string",
          "description": "Used as the label text for the item.",
          "privacy": "public",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 25,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "selected",
          "type": "boolean",
          "description": "Set to `true` if the item is selected.",
          "privacy": "public",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 30,
              "column": 6
            },
            "end": {
              "line": 35,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"updateStyles\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "collapsed",
          "type": "boolean",
          "description": "Set to `true` if the item is in a collapsed dropdown.",
          "privacy": "public",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"updateStyles\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "cancelSelect",
          "type": "boolean",
          "description": "Cancels events that trigger selection.",
          "privacy": "public",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "icon",
          "type": "string",
          "description": "Used to set the icon for the item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 14,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "subitem",
          "type": "boolean",
          "description": "Set to `true` if this is a subitem.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 6
            },
            "end": {
              "line": 23,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "dropdown",
          "type": "boolean",
          "description": "Shows a dropdown arrow icon to indicate this item can be tapped to\nopen a subgroup.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "overflowed",
          "type": "boolean",
          "description": "Set to `true` if the item is inside a overflowed dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"updateStyles\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "emptyIcon",
          "type": "boolean",
          "description": "Shows an empty state outline for icon.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "emptyLabel",
          "type": "boolean",
          "description": "Shows an empty state outline for the label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 58,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 60,
              "column": 4
            },
            "end": {
              "line": 62,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "_propIsTypeOf",
          "description": "Checks if a property is the desired `type`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 72,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop",
              "type": "*"
            },
            {
              "name": "type"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "_handleSelfTapped",
          "description": "Fire the select event so this item's parent will mark it as selected.",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ],
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "_addClassIfHasLabel",
          "description": "If an item has an icon and a label, get class to add margin between them.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 68,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "labelStr"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 3,
          "column": 10
        },
        "end": {
          "line": 69,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "item",
          "description": "A reference the object used to create this nav item.",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 16,
              "column": 6
            },
            "end": {
              "line": 18,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "label",
          "description": "Used as the label text for the item.",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 25,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "selected",
          "description": "Set to `true` if the item is selected.",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 30,
              "column": 6
            },
            "end": {
              "line": 35,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "collapsed",
          "description": "Set to `true` if the item is in a collapsed dropdown.",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "cancel-select",
          "description": "Cancels events that trigger selection.",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "icon",
          "description": "Used to set the icon for the item.",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 14,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "subitem",
          "description": "Set to `true` if this is a subitem.",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 6
            },
            "end": {
              "line": 23,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "dropdown",
          "description": "Shows a dropdown arrow icon to indicate this item can be tapped to\nopen a subgroup.",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "overflowed",
          "description": "Set to `true` if the item is inside a overflowed dropdown.",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "empty-icon",
          "description": "Shows an empty state outline for icon.",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "empty-label",
          "description": "Shows an empty state outline for the label.",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-app-nav-item"
    },
    {
      "description": "",
      "summary": "",
      "path": "px-app-nav-group.html",
      "properties": [
        {
          "name": "animationConfig",
          "type": "Object",
          "description": "Animation configuration. See README for more info.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 26,
              "column": 6
            },
            "end": {
              "line": 28,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "entryAnimation",
          "type": "string",
          "description": "Convenience property for setting an 'entry' animation. Do not set `animationConfig.entry`\nmanually if using this. The animated node is set to `this` if using this property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 37,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_entryAnimationChanged\""
            }
          },
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "exitAnimation",
          "type": "string",
          "description": "Convenience property for setting an 'exit' animation. Do not set `animationConfig.exit`\nmanually if using this. The animated node is set to `this` if using this property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_exitAnimationChanged\""
            }
          },
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "selected",
          "type": "boolean",
          "description": "If `true`, one of the group's subitems is selected.\n\nWatch for updates to find out when the group becomes selected through\nuser interaction or through automatic selection.\n\nSet the `selected` attribute on one of the group's subitems to select\nthis group.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_handleSelectedChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "item",
          "type": "Object",
          "description": "A reference the object used to create this nav item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "label",
          "type": "string",
          "description": "The label text for the group's button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "icon",
          "type": "string",
          "description": "The icon for the group's button. Should be a valid px icon\nname (e.g. 'px-fea:cases').",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "If `true` the group is expanded so the user can select a subitem.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 107,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_openedChangedFromOutside\""
            }
          }
        },
        {
          "name": "_opened",
          "type": "boolean",
          "description": "Internal representation of the `opened` state. Ensures changing `opened`\nflows through `openGroup` and `closeGroup` which are necessary to\ncorrectly size the resulting dropdown.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_openedChangedFromInside\""
            }
          }
        },
        {
          "name": "fixedWidth",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "hideDropdownIcon",
          "type": "boolean",
          "description": "Disables the group's dropdown carat icon.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "overflowed",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noHighlight",
          "type": "boolean",
          "description": "Disables highlighting the group when it is selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "emptyIcon",
          "type": "boolean",
          "description": "If `true` the group item button should have an empty state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "emptyLabel",
          "type": "boolean",
          "description": "If `true` the group item label should have an empty state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 158,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "cancelSelect",
          "type": "boolean",
          "description": "Cancels events that trigger selection.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "fitInto",
          "type": "HTMLElement",
          "description": "A reference to the HTMLElement to fit the group dropdown into.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "collapsed",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_openAnimation",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_closeAnimation",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_offsetHeight",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_entryAnimationChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 50,
              "column": 4
            },
            "end": {
              "line": 56,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "_exitAnimationChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 58,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "_copyProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 71,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config1"
            },
            {
              "name": "config2"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "_cloneConfig",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "_getAnimationConfigRecursive",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 128,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "map"
            },
            {
              "name": "allConfigs"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "getAnimationConfig",
          "description": "An element implementing `Polymer.NeonAnimationRunnerBehavior` calls this method to configure\nan animation with an optional type. Elements implementing `Polymer.NeonAnimatableBehavior`\nshould define the property `animationConfig`, which is either a configuration object\nor a map of animation type to array of configuration objects.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "_configureAnimations",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-runner-behavior.html",
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "configs"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationRunnerBehavior"
        },
        {
          "name": "_shouldComplete",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-runner-behavior.html",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "activeEntries"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationRunnerBehavior"
        },
        {
          "name": "_complete",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-runner-behavior.html",
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "activeEntries"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationRunnerBehavior"
        },
        {
          "name": "playAnimation",
          "description": "Plays an animation with an optional `type`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-runner-behavior.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "string="
            },
            {
              "name": "cookie",
              "type": "!Object="
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationRunnerBehavior"
        },
        {
          "name": "cancelAnimation",
          "description": "Cancels the currently running animations.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-runner-behavior.html",
            "start": {
              "line": 114,
              "column": 4
            },
            "end": {
              "line": 119,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimationRunnerBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 4
            },
            "end": {
              "line": 224,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 4
            },
            "end": {
              "line": 232,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_openedChangedFromOutside",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 241,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal"
            }
          ]
        },
        {
          "name": "_openedChangedFromInside",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal"
            }
          ]
        },
        {
          "name": "_handleDropdownOpened",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 259,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_handleDropdownClosed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 268,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_toggleGroup",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "openGroup",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 4
            },
            "end": {
              "line": 303,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "closeGroup",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "refitGroup",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_handleSelfTapped",
          "description": "When the user clicks on a group, toggle the group's dropdown menu\nso the user can to select a subitem.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 4
            },
            "end": {
              "line": 329,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_handleGroupContainerTapped",
          "description": "When the user clicks on a group container but not on the group content,\nclose the dropdown.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 4
            },
            "end": {
              "line": 342,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_handleGroupCanceled",
          "description": "If the dropdown is cancelled (about to close) but the cancel event comes\nfrom a click on target element, stop the cancel so we can handle it\nthrough the click handler on the target element.\n\nThanks to paper-menu-button for the guidance on how to best handle this.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 360,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_handleSelectedChanged",
          "description": "If a group's selected state is changed and it is open, close the group.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 365,
              "column": 4
            },
            "end": {
              "line": 369,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nextState"
            },
            {
              "name": "lastState"
            }
          ]
        },
        {
          "name": "_handleItemSelected",
          "description": "Closes a superlist if its subitem is selected.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_getPositionTarget",
          "description": "Sets the item button as the target the dropdown will position against.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 4
            },
            "end": {
              "line": 385,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getVerticalOffset",
          "description": "Measures the size of the item button to position the dropdown at\nthe bottom.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 391,
              "column": 4
            },
            "end": {
              "line": 393,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isGroupSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 400,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSelected"
            },
            {
              "name": "noHighlight"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 53,
          "column": 10
        },
        "end": {
          "line": 401,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "animation-config",
          "description": "Animation configuration. See README for more info.",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 26,
              "column": 6
            },
            "end": {
              "line": 28,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "entry-animation",
          "description": "Convenience property for setting an 'entry' animation. Do not set `animationConfig.entry`\nmanually if using this. The animated node is set to `this` if using this property.",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 37,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "exit-animation",
          "description": "Convenience property for setting an 'exit' animation. Do not set `animationConfig.exit`\nmanually if using this. The animated node is set to `this` if using this property.",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "selected",
          "description": "If `true`, one of the group's subitems is selected.\n\nWatch for updates to find out when the group becomes selected through\nuser interaction or through automatic selection.\n\nSet the `selected` attribute on one of the group's subitems to select\nthis group.",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "item",
          "description": "A reference the object used to create this nav item.",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "label",
          "description": "The label text for the group's button.",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "icon",
          "description": "The icon for the group's button. Should be a valid px icon\nname (e.g. 'px-fea:cases').",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "opened",
          "description": "If `true` the group is expanded so the user can select a subitem.",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 107,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fixed-width",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "hide-dropdown-icon",
          "description": "Disables the group's dropdown carat icon.",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "overflowed",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-highlight",
          "description": "Disables highlighting the group when it is selected.",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "empty-icon",
          "description": "If `true` the group item button should have an empty state.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "empty-label",
          "description": "If `true` the group item label should have an empty state.",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 158,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "cancel-select",
          "description": "Cancels events that trigger selection.",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fit-into",
          "description": "A reference to the HTMLElement to fit the group dropdown into.",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {},
          "type": "HTMLElement"
        },
        {
          "name": "collapsed",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "px-app-nav-group.html",
            "start": {
              "line": 44,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 23
            }
          }
        }
      ],
      "tagname": "px-app-nav-group"
    },
    {
      "description": "",
      "summary": "",
      "path": "px-app-nav-group.html",
      "properties": [
        {
          "name": "animationTiming",
          "type": "Object",
          "description": "Defines the animation timing.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "isNeonAnimation",
          "type": "boolean",
          "description": "Can be used to determine that elements implement this behavior.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 54,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "timingFromConfig",
          "description": "Returns the animation timing by mixing in properties from `config` to the defaults defined\nby the animation.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 60,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "setPrefixedProperty",
          "description": "Sets `transform` and `transformOrigin` properties along with the prefixed versions.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "property"
            },
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "complete",
          "description": "Called when the animation finishes.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 27
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "configure",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 408,
              "column": 4
            },
            "end": {
              "line": 421,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 403,
          "column": 10
        },
        "end": {
          "line": 422,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "animation-timing",
          "description": "Defines the animation timing.",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "expand-animation"
    },
    {
      "description": "",
      "summary": "",
      "path": "px-app-nav-group.html",
      "properties": [
        {
          "name": "animationTiming",
          "type": "Object",
          "description": "Defines the animation timing.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "isNeonAnimation",
          "type": "boolean",
          "description": "Can be used to determine that elements implement this behavior.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 54,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "timingFromConfig",
          "description": "Returns the animation timing by mixing in properties from `config` to the defaults defined\nby the animation.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 60,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "setPrefixedProperty",
          "description": "Sets `transform` and `transformOrigin` properties along with the prefixed versions.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "property"
            },
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "complete",
          "description": "Called when the animation finishes.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 27
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "configure",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 429,
              "column": 4
            },
            "end": {
              "line": 442,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 424,
          "column": 10
        },
        "end": {
          "line": 443,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "animation-timing",
          "description": "Defines the animation timing.",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "contract-animation"
    },
    {
      "description": "",
      "summary": "",
      "path": "px-app-nav-subgroup.html",
      "properties": [
        {
          "name": "animationConfig",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "entryAnimation",
          "type": "string",
          "description": "Convenience property for setting an 'entry' animation. Do not set `animationConfig.entry`\nmanually if using this. The animated node is set to `this` if using this property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 37,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_entryAnimationChanged\""
            }
          },
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "exitAnimation",
          "type": "string",
          "description": "Convenience property for setting an 'exit' animation. Do not set `animationConfig.exit`\nmanually if using this. The animated node is set to `this` if using this property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_exitAnimationChanged\""
            }
          },
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "selected",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "collapsed",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 55,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "overflowed",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 61,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "item",
          "type": "Object",
          "description": "A reference the object used to create this nav item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "label",
          "type": "string",
          "description": "The label text for the group's button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 75,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "icon",
          "type": "string",
          "description": "The icon for the group's button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "emptyIcon",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "If `true` the group is expanded so the user can select a subitem.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 94,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "onlyShowIcon",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 100,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onlyShowIconChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_reopen",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_entryAnimationChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 50,
              "column": 4
            },
            "end": {
              "line": 56,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "_exitAnimationChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 58,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "_copyProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 71,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config1"
            },
            {
              "name": "config2"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "_cloneConfig",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "_getAnimationConfigRecursive",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 128,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "map"
            },
            {
              "name": "allConfigs"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "getAnimationConfig",
          "description": "An element implementing `Polymer.NeonAnimationRunnerBehavior` calls this method to configure\nan animation with an optional type. Elements implementing `Polymer.NeonAnimatableBehavior`\nshould define the property `animationConfig`, which is either a configuration object\nor a map of animation type to array of configuration objects.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "_configureAnimations",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-runner-behavior.html",
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "configs"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationRunnerBehavior"
        },
        {
          "name": "_shouldComplete",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-runner-behavior.html",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "activeEntries"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationRunnerBehavior"
        },
        {
          "name": "_complete",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-runner-behavior.html",
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "activeEntries"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationRunnerBehavior"
        },
        {
          "name": "playAnimation",
          "description": "Plays an animation with an optional `type`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-runner-behavior.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "string="
            },
            {
              "name": "cookie",
              "type": "!Object="
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationRunnerBehavior"
        },
        {
          "name": "cancelAnimation",
          "description": "Cancels the currently running animations.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-runner-behavior.html",
            "start": {
              "line": 114,
              "column": 4
            },
            "end": {
              "line": 119,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimationRunnerBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 147,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_toggleGroup",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 155,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "openGroup",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "closeGroup",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 4
            },
            "end": {
              "line": 165,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onNeonAnimationFinish",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_handleSelfTapped",
          "description": "When the user clicks on a group, toggle the group's dropdown menu\nso the user can to select a subitem.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_onlyShowIconChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal"
            },
            {
              "name": "oldVal"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 36,
          "column": 10
        },
        "end": {
          "line": 197,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "animation-config",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "entry-animation",
          "description": "Convenience property for setting an 'entry' animation. Do not set `animationConfig.entry`\nmanually if using this. The animated node is set to `this` if using this property.",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 34,
              "column": 6
            },
            "end": {
              "line": 37,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "exit-animation",
          "description": "Convenience property for setting an 'exit' animation. Do not set `animationConfig.exit`\nmanually if using this. The animated node is set to `this` if using this property.",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animatable-behavior.html",
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.NeonAnimatableBehavior"
        },
        {
          "name": "selected",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "collapsed",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 55,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "overflowed",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 61,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "item",
          "description": "A reference the object used to create this nav item.",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "label",
          "description": "The label text for the group's button.",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 75,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "icon",
          "description": "The icon for the group's button.",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "empty-icon",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "opened",
          "description": "If `true` the group is expanded so the user can select a subitem.",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 94,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "only-show-icon",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 100,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "px-app-nav-subgroup.html",
            "start": {
              "line": 28,
              "column": 8
            },
            "end": {
              "line": 28,
              "column": 21
            }
          }
        }
      ],
      "tagname": "px-app-nav-subgroup"
    },
    {
      "description": "",
      "summary": "",
      "path": "px-app-nav-subgroup.html",
      "properties": [
        {
          "name": "animationTiming",
          "type": "Object",
          "description": "Defines the animation timing.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "isNeonAnimation",
          "type": "boolean",
          "description": "Can be used to determine that elements implement this behavior.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 54,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "timingFromConfig",
          "description": "Returns the animation timing by mixing in properties from `config` to the defaults defined\nby the animation.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 60,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "setPrefixedProperty",
          "description": "Sets `transform` and `transformOrigin` properties along with the prefixed versions.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "property"
            },
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "complete",
          "description": "Called when the animation finishes.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 27
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "configure",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 4
            },
            "end": {
              "line": 217,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 199,
          "column": 10
        },
        "end": {
          "line": 218,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "animation-timing",
          "description": "Defines the animation timing.",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "expand-subgroup-animation"
    },
    {
      "description": "",
      "summary": "",
      "path": "px-app-nav-subgroup.html",
      "properties": [
        {
          "name": "animationTiming",
          "type": "Object",
          "description": "Defines the animation timing.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "isNeonAnimation",
          "type": "boolean",
          "description": "Can be used to determine that elements implement this behavior.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 54,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "timingFromConfig",
          "description": "Returns the animation timing by mixing in properties from `config` to the defaults defined\nby the animation.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 60,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "setPrefixedProperty",
          "description": "Sets `transform` and `transformOrigin` properties along with the prefixed versions.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "property"
            },
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "complete",
          "description": "Called when the animation finishes.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 27
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        },
        {
          "name": "configure",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 4
            },
            "end": {
              "line": 239,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 220,
          "column": 10
        },
        "end": {
          "line": 240,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "animation-timing",
          "description": "Defines the animation timing.",
          "sourceRange": {
            "file": "bower_components/neon-animation/neon-animation-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 34,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.NeonAnimationBehavior"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "contract-subgroup-animation"
    },
    {
      "description": "",
      "summary": "",
      "path": "px-app-nav-subitem.es6.js",
      "properties": [
        {
          "name": "item",
          "type": "Object",
          "description": "A reference the object used to create this nav item.",
          "privacy": "public",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 16,
              "column": 6
            },
            "end": {
              "line": 18,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "label",
          "type": "string",
          "description": "Used as the label text for the item.",
          "privacy": "public",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 25,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "selected",
          "type": "boolean",
          "description": "Set to `true` if the item is selected.",
          "privacy": "public",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 30,
              "column": 6
            },
            "end": {
              "line": 35,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"updateStyles\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "collapsed",
          "type": "boolean",
          "description": "Set to `true` if the item is in a collapsed dropdown.",
          "privacy": "public",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"updateStyles\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "cancelSelect",
          "type": "boolean",
          "description": "Cancels events that trigger selection.",
          "privacy": "public",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "parentSelected",
          "type": "boolean",
          "description": "Set to `true` if the subitem's parent is selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 17,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"updateStyles\""
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 58,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 60,
              "column": 4
            },
            "end": {
              "line": 62,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "_propIsTypeOf",
          "description": "Checks if a property is the desired `type`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 72,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop",
              "type": "*"
            },
            {
              "name": "type"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "_handleSelfTapped",
          "description": "Fire the select event so this item's parent will mark it as selected.",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ],
          "inheritedFrom": "PxAppNavBehavior.Item"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 3,
          "column": 10
        },
        "end": {
          "line": 19,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "item",
          "description": "A reference the object used to create this nav item.",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 16,
              "column": 6
            },
            "end": {
              "line": 18,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "label",
          "description": "Used as the label text for the item.",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 25,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "selected",
          "description": "Set to `true` if the item is selected.",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 30,
              "column": 6
            },
            "end": {
              "line": 35,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "collapsed",
          "description": "Set to `true` if the item is in a collapsed dropdown.",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "cancel-select",
          "description": "Cancels events that trigger selection.",
          "sourceRange": {
            "file": "px-app-nav-behaviors.es6.js",
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxAppNavBehavior.Item"
        },
        {
          "name": "parent-selected",
          "description": "Set to `true` if the subitem's parent is selected.",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 17,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-app-nav-subitem"
    },
    {
      "description": "`px-app-nav` is an app-level navigation element that allows users to change the\ncurrent view. The element is designed to work on desktop and mobile/touch\ndevices, supporting any viewport size. It has three distinct visual styles that\ncan be switched at any time to suit different app designs.\n\n--------------------------------------------------------------------------------\n\n### Navigation items: Structuring data and managing selection\n\nThe navigation accepts a list of items that will be converted into buttons for\nthe user to interact with. Each item should have at least a label that will\nbe displayed for the user to select and a unique ID that will be used to keep\ntrack of which item is selected.\n\nThis data should be passed into the `items` attribute or property on the\n`px-app-nav` element.\n\nThis is a simple navigation data example:\n\n\n    [\n      {\n        \"id\" : \"home\",\n        \"label\" : \"Home\",\n        \"icon\" : \"px-fea:home\"\n      },\n      {\n        \"id\" : \"alert\",\n        \"label\" : \"Alerts\",\n        \"icon\" : \"px-fea:alerts\"\n      }\n    ]\n\n\nTop-level navigation items can optionally have child items. This is useful for\ncreating categories of related pages. If a top-level navigation item has any\nchildren it cannot be selected directly - users can select its child items,\nand the top-level \"category\" item will get the selected visual style.\n\nThis example shows a \"Dashboards\" category with a few different dashboard pages:\n\n\n    [\n      {\n        \"id\" : \"dash\",\n        \"label\" : \"Dashboards\",\n        \"icon\" : \"px-fea:dashboard\",\n        \"children\" : [\n          {\n            \"id\" : \"plant-status\",\n            \"label\" : \"Plant Status Updates\"\n          },\n          {\n            \"id\" : \"output-info\",\n            \"label\" : \"Daily Output Measurements\"\n          }\n        ]\n      }\n    ]\n\nAll items (top-level items, top-level category items, and child items) should\nhave the following properties:\n\n  - **id** {string} - unique string that identifies the item. Should only contain\n  valid, URI-safe characters. Example: \"home\", \"alerts1\"\n  - **label** {string} - short, human-readable text. The user will tap this text\n  to select the item. Example: \"Homepage\", \"View Alerts\"\n\nThe following optional properties can be defined for top-level items only:\n\n  - **icon** {string} - valid [px-icon-set](https://www.predix-ui.com/#/modules/px-icon-set/)\n  icon placed next to the text label for the item. Use an icon from the `px-fea`\n  for the best sizing and visual styling. If the icon you need is not available in\n  the `px-fea` icon set, you may use an icon from the `px-nav` icon set, but only\n  do so if absolutely necessary.\n  - **children** {array} - child items that will be placed in a dropdown under\n  their parent top-level item. Each child item should have an `id` and `label`.\n  If the child item has an `icon` property, it will be ignored.\n\nExample top-level item without children:\n\n\n    {\n      \"id\" : \"page-id\",\n      \"label\" : \"Page Title\",\n      \"icon\" : \"px-fea:templates\"\n    }\n\n\nExample top-level item with child items:\n\n\n    {\n      \"id\" : \"category-id\",\n      \"label\" : \"Category Title\",\n      \"icon\" : \"px-fea:microservice\",\n      \"children\" : [\n        {\n          \"id\" : \"child-item-1\",\n          \"label\" : \"First Child Title\"\n        },\n        {\n          \"id\" : \"child-item-2\",\n          \"label\" : \"Second Child Title\"\n        }\n      ]\n    }\n\n\nAdditional data not used by `px-app-nav` can also be included in each item's\nobject. This is a useful way to store metadata about app pages that will be used\nat run-time when a new nav item is selected. Example:\n\n\n    {\n      \"id\" : \"all-cases\",\n      \"label\" : \"Cases\",\n      \"metadata\" : {\n        \"openCases\" : \"12\",\n        \"closedCases\" : \"82\"\n      }\n    }\n\nThe navigation will not mutate any of its items properties, making it easy to\nshare any item metadata with other app components.\n\n#### Responding to item selection\n\nWhen the user taps on a navigation item it will be marked as selected. The app\ncontaining the `px-app-nav` element should respond to the new selected item and\nupdate its view.\n\nThere are two ways for an app to listen for user selection:\n\n- **By reference:** The element's `selected` property will be updated when a new\nitem is selected. The `selected` property will notify a reference to the object\nthat describes the item in the `items` array.\n\n- **By route:** The element's `selectedRoute` property will notify an array of\nstrings that trace the path from the root of the `items` graph to the selected\nitem. This is useful for binding the navigation state to the app's URL path.\n(See the [px-app-route](https://www.predix-ui.com/#/elements/px-app-helpers/px-app-route)\nmodule for a guide to binding the navigation state to the URL.)\n\nFor example, given the following simplified navigation `items` list:\n\n    [\n      {\n        \"id\" : \"dash\",\n        \"label\" : \"Dashboards\",\n        \"children\" : [\n          {\n            \"id\" : \"info-dash\",\n            \"label\" : \"Info Dashboard\"\n          }\n        ]\n      }\n    ]\n\nWhen the user selects the \"Info Dashboard\", the `selectedRoute` will be set to\n`[\"dash\", \"info-fash\"]`.\n\n#### Selecting an item programmatically\n\nSometimes it is useful for an app to automatically change the active page\n(e.g. opening the home page when the app is first loaded, or opening a dashboard\nwhen the user clicks on an alert message). The `selected` and `selectedRoute`\nproperties can be used to set the selected navigation item state in the same\nway they are used to read the selected navigation item state.\n\nThe simplest way to do this is through `selectedRoute`:\n\n\n    <px-app-nav\n        items='[\n          { \"label\" : \"Home\",   \"id\" : \"home\",   \"icon\" : \"px-fea:home\" },\n          { \"label\" : \"Alerts\", \"id\" : \"alerts\", \"icon\" : \"px-fea:alerts\" },\n          { \"label\" : \"Assets\", \"id\" : \"assets\", \"icon\" : \"px-fea:asset\", children: [\n            { \"label\" : \"Asset #1\", \"id\" : \"a1\" },\n            { \"label\" : \"Asset #2\", \"id\" : \"a2\" }\n          ] }\n        ]'\n        selected-route='[\"assets\", \"a1\"]'>\n    </px-app-nav>\n\n\nItems can also be selected by reference using the `selected` property. Selecting\nthis way requires a bit of JavaScript; the navigation does a simple reference\nequality check (`item1 === item2`) to find the item in the graph and select it.\nPassing an item with the same properties as one of the `items` objects will\nnot select it.\n\n\n    <px-app-nav id=\"nav\"></px-app-nav>\n    <script>\n      var nav = document.getElementById('nav');\n      var navItems = [\n        { \"id\" : \"home\", \"label\" : \"Home\" }\n      ];\n      nav.items = navItems;\n      nav.selected = navItems[0];\n    </script>\n\n\nData-binding can also be used to accomplish the same thing without manually\nfinding the `px-app-nav` element in the DOM.\n\n### Binding to the URL path (routing)\n\nThe `px-app-nav` element is designed to easily bind its state to the URL path.\nWhen the user selects an item, its `selectedRoute` can be encoded and used to\nset the URL path. The user can then bookmark the page or share the URL to link\nto a specific view. When the user loads a page with a URL path defined, that\npath can be decoded and used to select the right navigation item (and show a\npage).\n\nFor a ready-to-go solution for binding `px-app-nav` to the URL path, see the\n[px-app-route](https://www.predix-ui.com/#/elements/px-app-helpers/px-app-route) component.\nThis component works best in applications built using Polymer as a data-binding\nframework, but also exposes methods to help convert the navigation's\n`selectedRoute` to and from a path string for use in other framework routers.\n\nAlternatively, listen for update events from the `selected` and/or `selectedRoute`\nproperties in your app and send the values to the framework router of your\nchoice, or implement your own routing system from scratch.\n\n--------------------------------------------------------------------------------\n\n\n### Navigation styles\n\nTwo of the navigation styles, horizontal and vertical, should only be used on\ndesktop screens. The collapsed navigation style should be used on mobile/touch\ndevices and can also be used for desktop devices.\n\n\n#### 1. Horizontal navigation\n\nThe horizontal navigation style is a persistent bar fixed to the top of the viewport.\nNavigation items are displayed in a row. If the window is too narrow to fit all\nthe items, any overflowed items are placed into an overflow dropdown. If only\none navigation item fits in the window, the navigation will automatically\nswitch to collapse style (see description below).\n\nThis is the default style. It doesn't require any additional configuration to\nenable beyond putting the `px-app-nav` element tag on the app page. The following\nexample shows how to configure px-app-nav in the horizontal style:\n\n\n    <px-app-nav\n        items='[\n          { \"label\" : \"Home\",   \"id\" : \"home\",   \"icon\" : \"px-fea:home\" },\n          { \"label\" : \"Alerts\", \"id\" : \"alerts\", \"icon\" : \"px-fea:alerts\" },\n          { \"label\" : \"Assets\", \"id\" : \"assets\", \"icon\" : \"px-fea:asset\", children: [\n            { \"label\" : \"Asset #1\", \"id\" : \"a1\" },\n            { \"label\" : \"Asset #2\", \"id\" : \"a2\" }\n          ] }\n        ]'\n        selected-route='[\"assets\",\"a1\"]'>\n    </px-app-nav>\n\n#### Positioning a horizontal app-nav in an app:\n\nThe horizontal style `px-app-nav` element should be fixed at the top of your app\nwith app content configured to scroll beneath it. The app must position the\n`px-app-nav` element using CSS to fix it to the top of the view. By default, the\nelement is `position: relative` and `display: block`, causing it to fill its\nparent container's width but scroll out of the view as the user scrolls down\nthe page.\n\nThe following example fixes the element to the top of the view so content\ncan scroll beneath it:\n\n\n    <style>\n      px-app-nav {\n        position: fixed;\n        top: 0;\n        left: 0;\n      }\n    </style>\n    <px-app-nav items=\"...\"></px-app-nav>\n\nUsing position fixed will cause the `px-app-nav` element to cover other HTML\nelements at the top of your page. Offset your content (e.g. by setting\n`margin-top: 80px` on your content container) to ensure the navigation does not\ncover other app elements unintentionally.\n\n--------------------------------------------------------------------------------\n\n#### 2. Collapsed navigation\n\nThe collapsed navigation style is also a persistent bar fixed to the top of the\nviewport. The navigation items are displayed in a dropdown menu that the user\ncan open by clicking or tapping on the open button; and closed by selecting\na navigation item or clicking or tapping anywhere else in the viewport.\n\nIf no item is selected, the collapsed navigation will show an empty outline\nfor the dropdown trigger button. If an item is selected that item's label and\nicon will be shown in the dropdown trigger button.\n\nThis style can be enabled in a few different ways:\n\n- **Force collapse:** Setting the `collapseAll` property to true or enabling the\n`collapse-all` attribute on the `px-app-nav` element will force the navigation\nto use the collapsed style at all times. Example:\n\n\n    <px-app-nav items=\"...\" collapse-all></px-app-nav>\n\n\n- **Dynamic collapse:** The `collapseAt` property can be used to dynamically\ncollapse and un-collapse the navigation when the viewport size changes. If the\nsize of the `px-app-nav` element's container becomes smaller than the `collapseAt`\nvalue, it is collapsed. If the element's container becomes larger than the\n`collapseAt` value, it is un-collapsed.\n\n\n    <px-app-nav items=\"...\" collapse-at=\"420\"></px-app-nav>\n\n\nThe `collapseAt` property should be a number that will be converted into pixels.\n\nWhen the navigation is automatically collapsed or un-collapsed, the read-only\n`collapsed` property will be updated. Watch that property to figure out the\nstate of the navigation.\n\n- **Auto-collapse:** When the default horizontal style is in use and only 1 item\nfits in the space available to the `px-app-nav` element, the navigation will be\nautomatically collapsed.\n\n#### Positioning a collapsed app-nav in an app:\n\nFollow the sticking instructions in the Horizontal style section above to\ncorrectly position the `px-app-nav` element on the page in collapsed style.\n\n--------------------------------------------------------------------------------\n\n#### 3. Vertical navigation\n\nThe vertical navigation style is fixed to the left or right side of the browser.\nWhen the navigation is not being interacted with it displays as a narrow strip\nshowing only the navigation item icons. When the user hovers over the vertical\nnavigation, the bar animates open and allows the user to click/tap to select\na new item. Example:\n\n\n    <px-app-nav items=\"...\" vertical></px-app-nav>\n\n\n#### Positioning a vertical app-nav  in an app:\n\nThe vertical style defaults to CSS styles `position: absolute; left: 0; top: 0;`\nto stick to the left side of the screen. This causes the navigation element to\nfill the first `position: relative` item above it in the DOM. Override these\nvalues to position it in whatever way your app requires:\n\n\n      <style>\n        px-app-nav {\n          position: fixed;\n          right: 0;\n          top: 0;\n        }\n      </style>\n      <px-app-nav items=\"...\"></px-app-nav>\n\n--------------------------------------------------------------------------------\n\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description\n----------------|-------------\n`--px-app-nav-background-color`                                         | The background color of the app nav bar\n`--px-app-nav-item-background-color--collapsed`                         | The background color for a collapsed app nav\n`--px-app-nav-item-background-color--empty`                             | The background color for an empty app nav\n`--px-app-nav-item-background-color--hover`                             | The hover state color for an app nav item\n`--px-app-nav-item-background-color--pressed`                           | The pressed state color for an app nav item\n`--px-app-nav-item-background-color--selected`                          | The background color for a selected app nav item\n`--px-app-nav-item-background-color`                                    | The background color for an unselected app nav item\n`--px-app-nav-item-icon-color--collapsed`                               | The color of the icon in a collapsed app nav\n`--px-app-nav-item-icon-color--hover`                                   | The hover state color for an icon\n`--px-app-nav-item-icon-color--pressed`                                 | The pressed state color for an icon\n`--px-app-nav-item-icon-color--selected`                                | The  color for the icon in a selected item\n`--px-app-nav-item-icon-color`                                          | The normal, unselected color for an icon\n`--px-app-nav-item-stripe-color--selected`                              | The stripe accent color on the top or side of a selected item\n`--px-app-nav-item-text-color--collapsed`                               | The text color in a collapsed state\n`--px-app-nav-item-text-color--hover`                                   | The text color in a hover state\n`--px-app-nav-item-text-color--pressed`                                 | The text color in a pressed state\n`--px-app-nav-item-text-color--selected`                                | The text color for a selected item\n`--px-app-nav-item-text-color`                                          | The normal, unselected text color\n`--px-app-nav-subitem-background-color--hover`                          | The hover state background color for the dropdown submenu\n`--px-app-nav-subitem-background-color--selected`                       | The  background color for a selected item in the dropdown submenu\n`--px-app-nav-subitem-background-color`                                 | The background color for the dropdown submenu\n`--px-app-nav-subitem-text-color--collapsed`                            | The collapsed state text color for a submenu item\n`--px-app-nav-subitem-text-color--hover`                                | The hover state text color for a submenu item\n`--px-app-nav-subitem-text-color--selected`                             | The text color for a selected submenu item\n`--px-app-nav-subitem-text-color`                                       | The normal, unselected text color for a submenu item\n`--px-app-nav-subitem-background-color--collapsed`                      | The background color for the dropdown submenu in a collapsed state\n`--px-app-nav-subitem-background-color--collapsed-hover`                | The hover state background color for the dropdown submenu in a collapsed state\n`--px-app-nav-subitem-text-color--parent-collapsed-selected`            | The background color for the selected dropdown submenu in a collapsed state\n`--px-app-nav-subitem-background-color--parent-collapsed-selected`      | The background color for the parent item of a selected submenu item in a collapsed state\n`--px-app-nav-subitem-accent-color--parent-collapsed-selected`          | The strip accent color for the parent item of a selected submenu item in a collapsed state\n`--px-app-nav-subitem-background-color--parent-collapsed-hover`         | The background color for the parent of a hovered submenu item in a collapsed state\n`--px-app-nav-subitem-background-color--parent-collapsed-selected`      | The background color for the parent of a selected submenu item in a collapsed state\n`--px-app-nav-subitem-text-color--parent-collapsed-selected`            | The text color for the parent of a hovered submenu item in a collapsed state\n`--px-app-nav-subitem-text-color--parent-collapsed-not-selected`        | The text color for the parent of an open, unselected submenu item in a collapsed state\n`--px-app-nav-subitem-background-color--parent-collapsed-not-selected`  | The background color for the parent of an open, unselected submenu item in a collapsed state",
      "summary": "",
      "path": "px-app-nav.es6.js",
      "properties": [
        {
          "name": "_parentResizable",
          "type": "Object",
          "description": "The closest ancestor element that implements `IronResizableBehavior`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_parentResizableChanged\""
            }
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyingDescendant",
          "type": "boolean",
          "description": "True if this element is currently notifying its descendant elements of\nresize.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "items",
          "type": "Array",
          "description": "An array of objects that will be used to build the nav. Top-level items\ncan optionally have one level of children beneath them, turning the\ntop-level item into a dropdown group.\n\nSelecting an item automatically selects its parent if it has one.\nFor the navigation, top-level items with children cannot be selected\ndirectly - instead, users can select a child item and its parent will\nalso be marked as selected (and set as the `selectedItemParent`).\n\nAll items should have at least the following properties:\n\n- {String} id - A unique string that identifies the item. Should only\ncontain valid ASCII characters. It's recommended to only use URI-safe\ncharacters to allow for easy binding to the URL. Examples: 'home' or 'alerts'\n- {String} label - A short, human-readable text label for the item.\n\nThe following optional properties can be used:\n\n- {Array} children - An array of subitem objects that are children of\nthe item. Each child item should also have an `id` and `label`, and\nmay have its own child items.\n- {Boolean=false} isTerminal - If `true` the item cannot have any children.\nTerminal items can only be selected, not activated (navigated into).\nItems with children should not be marked as terminal.\n- {Boolean=false} isExhausted - If `true` the item does not have any\nadditional children available to load from a remote data source.\n- {Boolean=true} isSelectable - If `false` the item can only be activated\n(navigated into) to view its children, not selected.\n\nThe following is an example of a list of valid nav items:\n\n    [\n      { \"label\" : \"Home\",   \"id\" : \"home\" },\n      { \"label\" : \"Alerts\", \"id\" : \"alerts\" },\n      { \"label\" : \"Assets\", \"id\" : \"assets\", \"children\": [\n        { \"label\" : \"Asset #1\", \"id\" : \"a1\" },\n        { \"label\" : \"Asset #2\", \"id\" : \"a2\" }\n      ] }\n    ]\n\nThe item property names can be changed, e.g. to choose a different item\nproperty to serve as a unique ID. See the `keys` property for details.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-graph.es6.js",
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxAppBehavior.AssetGraph"
        },
        {
          "name": "keys",
          "type": "Object",
          "description": "Changes the item properties (keys) that will be used internally to find\neach item's unique ID, label, and child list.\n\nUse this property if you already have a predefined data schema for your\napplication and want to customize this component to match your schema.\nOtherwise, it's recommended to leave the defaults.\n\nThe following properties can be set:\n\n- id: [default='id'] a unique ID for the item\n- label: [default='label'] a human-readable label\n- children: [default='children'] an array of child items\n\nIf you want to configure any keys, you must set all the keys. If any\nof the keys are not defined, the navigation will fail.\n\nFor example, the schema could be changed to the following:\n\n    {\n      \"id\" : \"assetId\",\n      \"label\" : \"assetName\",\n      \"children\" : \"subAssets\"\n    }",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-graph.es6.js",
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{\"id\":\"id\",\"label\":\"label\",\"children\":\"children\",\"icon\":\"icon\"}",
          "inheritedFrom": "PxAppBehavior.AssetGraph"
        },
        {
          "name": "_assetGraph",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-graph.es6.js",
            "start": {
              "line": 100,
              "column": 6
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null",
          "inheritedFrom": "PxAppBehavior.AssetGraph"
        },
        {
          "name": "__rootItems",
          "type": "Array",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-graph.es6.js",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxAppBehavior.AssetGraph"
        },
        {
          "name": "selected",
          "type": "Object",
          "description": "A reference to the currently selected item. Use this property to set the\nselected item directly. The object passed to this property must be a\ndirect reference to one of the `items` objects. Changing this property\nwill automatically update the `selectedRoute`.\n\nSee `selectedRoute` for an alternative way to select items.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "selectedRoute",
          "type": "Array",
          "description": "The route to the selected item as an array of strings. Use this property\nto set the selected item by route, or to bind to updates when the\nselected item is changed. Changing this property will automatically\nupdate the `selected` item.\n\nThe route array starts at the top of the graph and ends with the selected\nitem. Each route entry is a string that corresponds to the unique ID\nof an item. The item property that this unique ID will be taken from can be\nconfigured with the `key` property. By default, it will be `item.id`.\n\n\nFor example, given the following graph:\n\n    [\n      {\n        \"label\" : \"Dashboards\",\n        \"id\" : \"dash\",\n        \"children\" : [\n          { \"label\" : \"Truck Statuses\", \"id\" : \"trucks\" },\n          { \"label\" : \"Generator Alerts\", \"id\" : \"generators\" }\n        ]\n      },\n    ]\n\nTo select the \"Truck Statuses\" page, set the route array to:\n\n    [\"dash\", \"trucks\"]\n\nIf the user then selects the \"Generator Alerts\" item, the route array\nwould be replaced with a new array with the following entries:\n\n    [\"dash\", \"generators\"]",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 99,
              "column": 8
            },
            "end": {
              "line": 105,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "selectedMeta",
          "type": "Object",
          "description": "[Read-only] Helpful metadata about the selected item.\n\nSINGLE-SELECT MODE: An object with the following information about\nthe selected item (if no selected item, all values will be null):\n\n- {Object} `item`: Reference to the selected item\n- {Array} `path`: The path to the selected item as an array. Begins with\nthe top-most item in the graph and ends with the selected item. It\nthe selected item is at the top of the graph, the array will include\nonly the selected item.\n- {Array} `route`: Route to the selected item (see `selectedRoute`\nfor more information on how this is created)\n- {Object} `parent`: Reference to the selected item's parent,\nor `null` if it has no parent\n- {Array} `children`: Reference to the selected item's children,\nor empty array if it has no children\n- {Array} `siblings`: Reference to the selected item's siblings (e.g.\nthe children of its parent) or an array with only the selected item\nif it has no children.\n\nMUTLI-SELECT MODE: An array of objects with metadata about each\nselected item. Each object will be contain the same values as above.\nIf no items are selected, all values will be null.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "null",
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_multiSelect",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "collapseAll",
          "type": "boolean",
          "description": "Set to `true` to collapse all nav items into a dropdown. Makes the nav\nmore accessible on mobile devices.\n\nUse `collapseAt` instead to dynamically collapse the nav based on the\ncurrent window size.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_handleCollapseAllChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "collapseAt",
          "type": "number",
          "description": "The width below which the nav will automatically collapse. Use a number\n(e.g. `450`) which will be converted to a pixel value (e.g. '450px').\n\nThis property will overwrite the `collapseAll` property. Avoid data\nbinding in to both properties at the same time.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"rebuild\""
            }
          }
        },
        {
          "name": "collapseWithIcon",
          "type": "boolean",
          "description": "Set to `true` to show an open/close icon for the collapsed menu instead\nof the selected item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "collapseOpened",
          "type": "boolean",
          "description": "When `true`, the collapse dropdown is open. When `false`, it is closed\nor does not exist.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 188,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "vertical",
          "type": "boolean",
          "description": "Shows the vertical navigation. The navigation will be take up the\nfull left-hand side of the page.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "verticalOpened",
          "type": "boolean",
          "description": "When `true`, the vertical navigation is open and the user is interacting\nwith it. When `false`, the vertical navigation is closed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "visibleItems",
          "type": "Array",
          "description": "An array of items that are currently visible — they fit in the menu\nand are not overflowed or collapse.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "overflowedItems",
          "type": "Array",
          "description": "An array of items that are currently hidden in the overflow dropdown\nor in the collapsed dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "allCollapsed",
          "type": "boolean",
          "description": "True if all items are collapsed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 241,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "anyOverflowed",
          "type": "boolean",
          "description": "True if some items are overflowed, or all items are collapsed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 252,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "someOverflowed",
          "type": "boolean",
          "description": "True if some items are overflowed, and some items are visible.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 6
            },
            "end": {
              "line": 263,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "fitInto",
          "type": "HTMLElement",
          "description": "Reference the HTMLElement to fit any nav dropdowns into. Dropdowns will\nautomatically be constrained to fit their width and height inside\nthis container element. If the nav items in the dropdown are wider than\nthe container, they will be truncated with ellipses. If the nav items\nin the dropdown are taller than the container, the dropdown will show\nand scroll bar so users can see the overset items.\n\nBy default, dropdowns will be fit into the `window`. If your nav is\nplaced inside of another container, and should not expand to take\nup all available space in the window, use this property to constrain\nthe dropdowns' sizes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 6
            },
            "end": {
              "line": 280,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_availableWidth",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 6
            },
            "end": {
              "line": 285,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"rebuild\""
            }
          }
        },
        {
          "name": "_statics",
          "type": "Object",
          "description": "Static values we use to calculate the size of items when we do math to\nmeasure if they can fit in the nav.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 4
            },
            "end": {
              "line": 298,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "notifyResize",
          "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "assignParentResizable",
          "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "stopResizeNotificationsFor",
          "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "resizerShouldNotify",
          "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 59
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the `element` should be notified of resize."
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onDescendantIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onIronRequestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_parentResizableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_requestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_measureText",
          "description": "Given a string of `text` and valid CSS `fontName` and `fontSize`, measures\nthe text string using the HTML canvas API. Returns the expected width of\nthe string in pixels as a number.\n\nFor example, to measure a bit of text using GE Inspira Sans:\n\n    var text = 'This is a bit of text to measure'\n    this._measureText(text, 'GE Inspira Sans', '15px');\n    // ... output is a size as an integer (e.g. `68` for '68px')",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-app-nav-behavior-measure-text.es6.js",
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text",
              "type": "String",
              "description": "A bit of text to measure"
            },
            {
              "name": "fontName",
              "type": "String",
              "description": "A valid [CSS font-family list](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family)"
            },
            {
              "name": "fontSize",
              "type": "String",
              "description": "A valid [CSS font-size](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size?v=control)"
            }
          ],
          "return": {
            "type": "(Number|undefined)",
            "desc": "The expected width of the text in pixels as a number (e.g. `68` for '68px'), undefined it can't be measured"
          },
          "inheritedFrom": "PxAppNavBehavior.MeasureText"
        },
        {
          "name": "_get2dMeasureCanvas",
          "description": "Fetches a [CanvasRenderingContext2D](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D)\ninterface configured with the given `fontName` and `fontSize`. Caches the\ninterface so it can retrieved later without rebuilding it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "px-app-nav-behavior-measure-text.es6.js",
            "start": {
              "line": 47,
              "column": 4
            },
            "end": {
              "line": 62,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fontName",
              "type": "String",
              "description": "A valid [CSS font-family list](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family)"
            },
            {
              "name": "fontSize",
              "type": "String",
              "description": "A valid [CSS font-size](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size?v=control)"
            }
          ],
          "return": {
            "type": "CanvasRenderingContext2D"
          },
          "inheritedFrom": "PxAppNavBehavior.MeasureText"
        },
        {
          "name": "__handleAssetReferenceChanged",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-graph.es6.js",
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 140,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items"
            },
            {
              "name": "keys"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetGraph"
        },
        {
          "name": "__handleKeyUpdated",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-graph.es6.js",
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetGraph"
        },
        {
          "name": "addChildren",
          "description": "Adds a child or children to the requested node. Pass a single object\nto add one child, or an array of objects to add multiple children.\n\nThe `node` should be a direct reference to one of the objects already\nin the asset graph (e.g. one of the `items` objects or another node\nadded through the `addChildren` API). To remove children from the root\nof the graph, call with `node` as null.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-graph.es6.js",
            "start": {
              "line": 176,
              "column": 4
            },
            "end": {
              "line": 188,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "(Object|null)"
            },
            {
              "name": "children",
              "type": "(Object|Array.<Object>)"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetGraph"
        },
        {
          "name": "removeChildren",
          "description": "Removes a child or children from the requested node. Pass `children` a\nsingle object to remove one child, an array of objects to remove multiple\nchildren, or null to remove all children.\n\nThe `node` should be a direct reference to one of the objects already\nin the asset graph (e.g. one of the `items` objects or another node\nadded through the `addChildren` API). To add children to the root\nof the graph, call with `node` as null.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-graph.es6.js",
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "(Object|null)"
            },
            {
              "name": "children",
              "type": "(Object|Array.<Object>)"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetGraph"
        },
        {
          "name": "multiSelect",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_toggleMultiSelect",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allowMultiSelect"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "select",
          "description": "Selects an item. Call with an object that is a direct reference to one\nof the `items` objects.\n\nIf multi-select mode is enabled, call with an object to select a single\nitem or an array of objects to select multiple items.\n\nAn optional source of the change can be provided as a string.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 218,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "(Object|Array)"
            },
            {
              "name": "source",
              "type": "String",
              "defaultValue": "'METHOD'"
            }
          ],
          "return": {
            "type": "(Object|Array)",
            "desc": "The next `selected` item or items"
          },
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "deselect",
          "description": "Deselects an item. Call with a direct reference to the selected item\nor with `null` to deselect whatever is selected.\n\nIf multi-select mode is enabled, call with a direct reference to one of\nthe selected items to deselect it, or an array of selected items to\ndeselect multiple, or `null` to deselect all items.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 232,
              "column": 6
            },
            "end": {
              "line": 251,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "(Object|Array|null)"
            },
            {
              "name": "source",
              "type": "String",
              "defaultValue": "'METHOD'"
            }
          ],
          "return": {
            "type": "(Object|Array|null)",
            "desc": "The remaining `selected` items or null"
          },
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_getSelectedMeta",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 253,
              "column": 6
            },
            "end": {
              "line": 271,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_assetSelectedByEvent",
          "description": "The event `detail.item` should be a reference to an item in the asset graph.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 276,
              "column": 6
            },
            "end": {
              "line": 281,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_assetDeselectedByEvent",
          "description": "The event `detail.item` should be a reference to an item in the asset graph.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 286,
              "column": 6
            },
            "end": {
              "line": 291,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_selectedRouteChanged",
          "description": "Should only sync changes to `selectedRoute` when necessary to avoid\ninfinite loop of `selected` observer triggering `selectedRoute` observer.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 297,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ref"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_updateSelectedFromRoute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 326,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "route"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_updateSelectedFromRouteMulti",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 328,
              "column": 6
            },
            "end": {
              "line": 351,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "route"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_selectedChanged",
          "description": "Should only sync changes to `selectedRoute` when necessary to avoid\ninfinite loop of `selected` observer triggering `selectedRoute` observer.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 357,
              "column": 5
            },
            "end": {
              "line": 367,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ref"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_checkIfEmpty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 369,
              "column": 6
            },
            "end": {
              "line": 372,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_updateSelectedRoute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 374,
              "column": 6
            },
            "end": {
              "line": 394,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_updateSelectedRouteMulti",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 413,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "__selectInitialAssets",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 428,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_routeIsDifferent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 430,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "r1"
            },
            {
              "name": "r2"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_selectAsset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 439,
              "column": 6
            },
            "end": {
              "line": 453,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "source"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_deselectAsset",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 477,
              "column": 6
            },
            "end": {
              "line": 492,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "source"
            }
          ],
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "_handleRebuild",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 4
            },
            "end": {
              "line": 323,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_handleMouseEnter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 4
            },
            "end": {
              "line": 335,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_handleMouseLeave",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 346,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_handleItemVisibilityChanged",
          "description": "Calls the render methods on dom-repeats to force them to re-filter their\nitems when `visibleItems` or `overflowedItems` changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 4
            },
            "end": {
              "line": 359,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_handleCollapseAllChanged",
          "description": "Forces a rebuild to collapse all items when `collapseAll` becomes true.\nForces a re-measure and rebuild to un-collapse all items when\n`collapseAll` becomes false.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 376,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "collapseAll",
              "type": "Boolean"
            }
          ]
        },
        {
          "name": "_itemSelectedByEvent",
          "description": "Updates the selected item when the user taps on a nav item button.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 381,
              "column": 4
            },
            "end": {
              "line": 385,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_handleResize",
          "description": "Called when an `iron-resize` event notifies the element that its\nparent container size may have changed.\n\nSize changed events will be collapsed to only trigger a new measurement\nevery 100ms. If the menu is currently collapsed, measure events\nwill not be triggered.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_measureAvailableWidth",
          "description": "Measures the width the nav items may occupy, allowing the component to\ndo math to see which items fit/are visible and which don't fit/will be\noverflowed. Measurements happen in the next animation frame, ensuring\nwe don't trigger a premature reflow and that the tab is visible.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "rebuild",
          "description": "Rebuilds the navigation by measuring the expected length of each nav\nitem and determining which items will fit in the available nav width.\nThe items that fit are added to the `visibleItems` list, and the items\nthat do not fit  are added to the `overflowedItems` list.\n\nThis method will only run if some nav items have been passed to the\n`items` attribute or property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 438,
              "column": 4
            },
            "end": {
              "line": 472,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Array.<Array>",
            "desc": "First item is the list of visible items (if any), second item is the list of overflowed items (if any)"
          }
        },
        {
          "name": "_fitItems",
          "description": "Iterates over a list of items and determines which will fit into the\navailable width and which will not.\n\nIf any items do not fit, backtracks and reduces the available width to\nensure an overflowed icon will also fit.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 486,
              "column": 4
            },
            "end": {
              "line": 517,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array",
              "description": "A flat Array of items to fit"
            },
            {
              "name": "measurements",
              "type": "Array",
              "description": "An Array of measurements for each item, in the same order as the items list"
            },
            {
              "name": "width",
              "type": "Number",
              "description": "The width to fit the items into"
            }
          ],
          "return": {
            "type": "Array.<Array>",
            "desc": "First entry is Array of items that fit, second entry is Array of items that do not fit"
          }
        },
        {
          "name": "_measureItems",
          "description": "Measures the expected width for each item based on static values. This\nspeeds up calculation on which items will fit — we do not have to\npaint items then measure and hide the overflowed items triggering\nanother repaint. Instead, we can do math based off the items values\nand measure them using a canvas to come up with a good guess for their size.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 529,
              "column": 4
            },
            "end": {
              "line": 532,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array",
              "description": "A flat Array of items to fit"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "A list of measurements for each item, in the same order as the items list"
          }
        },
        {
          "name": "_measureItem",
          "description": "Measures each item using the `_measureText` behavior and returns the\nexpected length of the item in pixels as a number.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 541,
              "column": 4
            },
            "end": {
              "line": 550,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "_getItemStyles",
          "description": "Fetches the font styles for this element from the DOM. Caches the result\nso we only need to call the `CSSText` API once (this forces a reflow).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 565,
              "column": 4
            },
            "end": {
              "line": 578,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Number",
            "desc": "styles.iconSize - The size of the icon in pixels as a number"
          }
        },
        {
          "name": "_parseSizeStyleVar",
          "description": "Parses a CSS style variable. If the style variable is defined,\nparses it into a relative pixel value (for px, em, and rem only).\nIf it is not defined, returns the fallback.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 589,
              "column": 4
            },
            "end": {
              "line": 601,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cssVar",
              "type": "String",
              "description": "e.g. '--px-app-nav-item-padding'"
            },
            {
              "name": "fallback",
              "type": "Number",
              "description": "Fallback if the style variable is undefined or can't be parsed"
            },
            {
              "name": "emBase"
            }
          ],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "_remToPx",
          "description": "Converts a REM-based value to a pixel value and returns as a parsed number.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 609,
              "column": 4
            },
            "end": {
              "line": 612,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rem",
              "type": "Number",
              "description": "A parsed rem integer or float"
            }
          ],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "_getDropdownLabel",
          "description": "Gets the dropdown label text.\n\nThere is no label text if:\n- the menu is not collapsed\n- the menu is collapsed and `collapseWithIcon` is true\n- the menu is collapsed and there is no selected item\n\nIf the menu is collapsed and an item is selected, returns the selected\nitem's label text.\n\nOtherwise, returns null.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 634,
              "column": 4
            },
            "end": {
              "line": 642,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItem",
              "type": "(Object|null)"
            },
            {
              "name": "selectedItemParent",
              "type": "(Object|null)"
            },
            {
              "name": "labelKey",
              "type": "String"
            },
            {
              "name": "collapseWithIcon",
              "type": "Boolean"
            },
            {
              "name": "allCollapsed",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "(String|null)"
          }
        },
        {
          "name": "_getDropdownIcon",
          "description": "Gets the dropdown icon.\n\n1. If some items are overflowed but the menu is not collapsed, returns\nthe double-right-arrow icon.\n2. If all items are overflowed, `collapseWithIcon` is true, and the collapse\ndropdown is closed, returns the hamburger icon.\n3. If all items are overflowed, `collapseWithIcon` is true, and the collapse\ndropdown is opened, returns the X (close) icon.\n4. If all items are overflowed, and an item is selected, returns\nthe selected item's icon (if it exists).\n\nOtherwise, returns null.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 667,
              "column": 4
            },
            "end": {
              "line": 684,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItem",
              "type": "(Object|null)"
            },
            {
              "name": "selectedItemParent",
              "type": "(Object|null)"
            },
            {
              "name": "iconKey",
              "type": "String"
            },
            {
              "name": "collapseWithIcon",
              "type": "Boolean"
            },
            {
              "name": "allCollapsed",
              "type": "Boolean"
            },
            {
              "name": "anyOverflowed",
              "type": "Boolean"
            },
            {
              "name": "collapseOpened",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "(String|null)"
          }
        },
        {
          "name": "_getDropdownWidth",
          "description": "If the dropdown is collapsed, reads the `-px-app-nav-collapsed-width--open`\nstyle variable and returns it or default value `320`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 692,
              "column": 4
            },
            "end": {
              "line": 697,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allCollapsed"
            }
          ],
          "return": {
            "type": "(Number|undefined)"
          }
        },
        {
          "name": "_getItemProp",
          "description": "Fetches an item's property at the configured key. Used to dynamically\nfetch the item's label, icon, children, etc. based on the configured\n`keys` for the app.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 708,
              "column": 4
            },
            "end": {
              "line": 710,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            },
            {
              "name": "key",
              "type": "String"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_isCollapsedCaratHidden",
          "description": "Hides the dropdown carat if all nav items are not collapsed, or if\nthe collapsed dropdown uses an open/closed icon.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 720,
              "column": 4
            },
            "end": {
              "line": 722,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allCollapsed",
              "type": "Boolean"
            },
            {
              "name": "collapseWithIcon",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_isCollapsedDropdownEmpty",
          "description": "Sets the collapsed dropdown to show an empty/unselected state if the\nnav is collapsed but no item is selected.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 732,
              "column": 4
            },
            "end": {
              "line": 734,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItem",
              "type": "(Object|null)"
            },
            {
              "name": "allCollapsed",
              "type": "Boolean"
            },
            {
              "name": "collapseWithIcon"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "`true` if no item is selected, `false` if an item is selected or the nav is not collapsed"
          }
        },
        {
          "name": "_isItemSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 741,
              "column": 4
            },
            "end": {
              "line": 743,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Boolean"
            },
            {
              "name": "selectedItem",
              "type": "(Object|null)"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_isItemVisible",
          "description": "Triggered automatically when `visibleItems` changes. Filters the dom-repeats\nto show/collapse items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 752,
              "column": 4
            },
            "end": {
              "line": 755,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_isItemOverflowed",
          "description": "Triggered automatically when `overflowedItems` changes. Filters the dom-repeats\nto show/collapse items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 764,
              "column": 4
            },
            "end": {
              "line": 767,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_isItemParent",
          "description": "Checks if the item is a parent of children.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 775,
              "column": 4
            },
            "end": {
              "line": 777,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            },
            {
              "name": "childrenKey"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_isItemNotParent",
          "description": "Checks if the item is NOT a parent of children.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 785,
              "column": 4
            },
            "end": {
              "line": 787,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            },
            {
              "name": "childrenKey"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_isSelectedOverflowed",
          "description": "Checks if the selected item is in the overflow list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 796,
              "column": 4
            },
            "end": {
              "line": 800,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItem",
              "type": "(Object|null)"
            },
            {
              "name": "selectedItemParent"
            },
            {
              "name": "overflowedItems",
              "type": "Array"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_isIconEmpty",
          "description": "Checks if the icon is undefined or an empty string.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 809,
              "column": 4
            },
            "end": {
              "line": 811,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "(Object|null)"
            },
            {
              "name": "iconKey",
              "type": "String"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeAnyOverflowed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 818,
              "column": 4
            },
            "end": {
              "line": 820,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "overflowed",
              "type": "Array"
            },
            {
              "name": "visible",
              "type": "Array"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeAllCollapsed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 827,
              "column": 4
            },
            "end": {
              "line": 829,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "overflowed",
              "type": "Array"
            },
            {
              "name": "visible",
              "type": "Array"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeSomeOverflowed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 836,
              "column": 4
            },
            "end": {
              "line": 838,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "overflowed",
              "type": "Array"
            },
            {
              "name": "visible",
              "type": "Array"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 3,
          "column": 10
        },
        "end": {
          "line": 839,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "items",
          "description": "An array of objects that will be used to build the nav. Top-level items\ncan optionally have one level of children beneath them, turning the\ntop-level item into a dropdown group.\n\nSelecting an item automatically selects its parent if it has one.\nFor the navigation, top-level items with children cannot be selected\ndirectly - instead, users can select a child item and its parent will\nalso be marked as selected (and set as the `selectedItemParent`).\n\nAll items should have at least the following properties:\n\n- {String} id - A unique string that identifies the item. Should only\ncontain valid ASCII characters. It's recommended to only use URI-safe\ncharacters to allow for easy binding to the URL. Examples: 'home' or 'alerts'\n- {String} label - A short, human-readable text label for the item.\n\nThe following optional properties can be used:\n\n- {Array} children - An array of subitem objects that are children of\nthe item. Each child item should also have an `id` and `label`, and\nmay have its own child items.\n- {Boolean=false} isTerminal - If `true` the item cannot have any children.\nTerminal items can only be selected, not activated (navigated into).\nItems with children should not be marked as terminal.\n- {Boolean=false} isExhausted - If `true` the item does not have any\nadditional children available to load from a remote data source.\n- {Boolean=true} isSelectable - If `false` the item can only be activated\n(navigated into) to view its children, not selected.\n\nThe following is an example of a list of valid nav items:\n\n    [\n      { \"label\" : \"Home\",   \"id\" : \"home\" },\n      { \"label\" : \"Alerts\", \"id\" : \"alerts\" },\n      { \"label\" : \"Assets\", \"id\" : \"assets\", \"children\": [\n        { \"label\" : \"Asset #1\", \"id\" : \"a1\" },\n        { \"label\" : \"Asset #2\", \"id\" : \"a2\" }\n      ] }\n    ]\n\nThe item property names can be changed, e.g. to choose a different item\nproperty to serve as a unique ID. See the `keys` property for details.",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-graph.es6.js",
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "PxAppBehavior.AssetGraph"
        },
        {
          "name": "keys",
          "description": "Changes the item properties (keys) that will be used internally to find\neach item's unique ID, label, and child list.\n\nUse this property if you already have a predefined data schema for your\napplication and want to customize this component to match your schema.\nOtherwise, it's recommended to leave the defaults.\n\nThe following properties can be set:\n\n- id: [default='id'] a unique ID for the item\n- label: [default='label'] a human-readable label\n- children: [default='children'] an array of child items\n\nIf you want to configure any keys, you must set all the keys. If any\nof the keys are not defined, the navigation will fail.\n\nFor example, the schema could be changed to the following:\n\n    {\n      \"id\" : \"assetId\",\n      \"label\" : \"assetName\",\n      \"children\" : \"subAssets\"\n    }",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-graph.es6.js",
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxAppBehavior.AssetGraph"
        },
        {
          "name": "selected",
          "description": "A reference to the currently selected item. Use this property to set the\nselected item directly. The object passed to this property must be a\ndirect reference to one of the `items` objects. Changing this property\nwill automatically update the `selectedRoute`.\n\nSee `selectedRoute` for an alternative way to select items.",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "selected-route",
          "description": "The route to the selected item as an array of strings. Use this property\nto set the selected item by route, or to bind to updates when the\nselected item is changed. Changing this property will automatically\nupdate the `selected` item.\n\nThe route array starts at the top of the graph and ends with the selected\nitem. Each route entry is a string that corresponds to the unique ID\nof an item. The item property that this unique ID will be taken from can be\nconfigured with the `key` property. By default, it will be `item.id`.\n\n\nFor example, given the following graph:\n\n    [\n      {\n        \"label\" : \"Dashboards\",\n        \"id\" : \"dash\",\n        \"children\" : [\n          { \"label\" : \"Truck Statuses\", \"id\" : \"trucks\" },\n          { \"label\" : \"Generator Alerts\", \"id\" : \"generators\" }\n        ]\n      },\n    ]\n\nTo select the \"Truck Statuses\" page, set the route array to:\n\n    [\"dash\", \"trucks\"]\n\nIf the user then selects the \"Generator Alerts\" item, the route array\nwould be replaced with a new array with the following entries:\n\n    [\"dash\", \"generators\"]",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 99,
              "column": 8
            },
            "end": {
              "line": 105,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "selected-meta",
          "description": "[Read-only] Helpful metadata about the selected item.\n\nSINGLE-SELECT MODE: An object with the following information about\nthe selected item (if no selected item, all values will be null):\n\n- {Object} `item`: Reference to the selected item\n- {Array} `path`: The path to the selected item as an array. Begins with\nthe top-most item in the graph and ends with the selected item. It\nthe selected item is at the top of the graph, the array will include\nonly the selected item.\n- {Array} `route`: Route to the selected item (see `selectedRoute`\nfor more information on how this is created)\n- {Object} `parent`: Reference to the selected item's parent,\nor `null` if it has no parent\n- {Array} `children`: Reference to the selected item's children,\nor empty array if it has no children\n- {Array} `siblings`: Reference to the selected item's siblings (e.g.\nthe children of its parent) or an array with only the selected item\nif it has no children.\n\nMUTLI-SELECT MODE: An array of objects with metadata about each\nselected item. Each object will be contain the same values as above.\nIf no items are selected, all values will be null.",
          "sourceRange": {
            "file": "bower_components/px-app-helpers/px-app-asset/px-app-asset-behavior-selectable.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "name": "collapse-all",
          "description": "Set to `true` to collapse all nav items into a dropdown. Makes the nav\nmore accessible on mobile devices.\n\nUse `collapseAt` instead to dynamically collapse the nav based on the\ncurrent window size.",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "collapse-at",
          "description": "The width below which the nav will automatically collapse. Use a number\n(e.g. `450`) which will be converted to a pixel value (e.g. '450px').\n\nThis property will overwrite the `collapseAll` property. Avoid data\nbinding in to both properties at the same time.",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "collapse-with-icon",
          "description": "Set to `true` to show an open/close icon for the collapsed menu instead\nof the selected item.",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "collapse-opened",
          "description": "When `true`, the collapse dropdown is open. When `false`, it is closed\nor does not exist.",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 188,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "vertical",
          "description": "Shows the vertical navigation. The navigation will be take up the\nfull left-hand side of the page.",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "vertical-opened",
          "description": "When `true`, the vertical navigation is open and the user is interacting\nwith it. When `false`, the vertical navigation is closed.",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "visible-items",
          "description": "An array of items that are currently visible — they fit in the menu\nand are not overflowed or collapse.",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "overflowed-items",
          "description": "An array of items that are currently hidden in the overflow dropdown\nor in the collapsed dropdown.",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "all-collapsed",
          "description": "True if all items are collapsed.",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 241,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "any-overflowed",
          "description": "True if some items are overflowed, or all items are collapsed.",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 252,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "some-overflowed",
          "description": "True if some items are overflowed, and some items are visible.",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 6
            },
            "end": {
              "line": 263,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fit-into",
          "description": "Reference the HTMLElement to fit any nav dropdowns into. Dropdowns will\nautomatically be constrained to fit their width and height inside\nthis container element. If the nav items in the dropdown are wider than\nthe container, they will be truncated with ellipses. If the nav items\nin the dropdown are taller than the container, the dropdown will show\nand scroll bar so users can see the overset items.\n\nBy default, dropdowns will be fit into the `window`. If your nav is\nplaced inside of another container, and should not expand to take\nup all available space in the window, use this property to constrain\nthe dropdowns' sizes.",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 6
            },
            "end": {
              "line": 280,
              "column": 7
            }
          },
          "metadata": {},
          "type": "HTMLElement"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "px-app-asset-selected",
          "description": "px-app-asset-selected",
          "metadata": {},
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {},
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "type": "CustomEvent",
          "name": "selected-route-changed",
          "description": "Fired when the `selectedRoute` property changes.",
          "metadata": {},
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "type": "CustomEvent",
          "name": "selected-meta-changed",
          "description": "Fired when the `selectedMeta` property changes.",
          "metadata": {},
          "inheritedFrom": "PxAppBehavior.AssetSelectable"
        },
        {
          "type": "CustomEvent",
          "name": "collapse-all-changed",
          "description": "Fired when the `collapseAll` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "collapse-opened-changed",
          "description": "Fired when the `collapseOpened` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "vertical-opened-changed",
          "description": "Fired when the `verticalOpened` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "visible-items-changed",
          "description": "Fired when the `visibleItems` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "overflowed-items-changed",
          "description": "Fired when the `overflowedItems` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "all-collapsed-changed",
          "description": "Fired when the `allCollapsed` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "any-overflowed-changed",
          "description": "Fired when the `anyOverflowed` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "some-overflowed-changed",
          "description": "Fired when the `someOverflowed` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "actions",
          "range": {
            "file": "px-app-nav.html",
            "start": {
              "line": 516,
              "column": 8
            },
            "end": {
              "line": 516,
              "column": 56
            }
          }
        }
      ],
      "tagname": "px-app-nav"
    }
  ],
  "metadata": {
    "polymer": {
      "behaviors": [
        {
          "description": "Helps with measuring the expected length of strings of text without first\npainting them to the DOM. Useful to do calculations on the expected size\nof some text before painting the result of the calculation, saving\na paint (e.g. to determine if something will fit into a space before\ntrying to put it there).",
          "summary": "",
          "path": "px-app-nav-behavior-measure-text.es6.js",
          "properties": [],
          "methods": [
            {
              "name": "_measureText",
              "description": "Given a string of `text` and valid CSS `fontName` and `fontSize`, measures\nthe text string using the HTML canvas API. Returns the expected width of\nthe string in pixels as a number.\n\nFor example, to measure a bit of text using GE Inspira Sans:\n\n    var text = 'This is a bit of text to measure'\n    this._measureText(text, 'GE Inspira Sans', '15px');\n    // ... output is a size as an integer (e.g. `68` for '68px')",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 32,
                  "column": 4
                },
                "end": {
                  "line": 36,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "text",
                  "type": "String",
                  "description": "A bit of text to measure"
                },
                {
                  "name": "fontName",
                  "type": "String",
                  "description": "A valid [CSS font-family list](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family)"
                },
                {
                  "name": "fontSize",
                  "type": "String",
                  "description": "A valid [CSS font-size](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size?v=control)"
                }
              ],
              "return": {
                "type": "(Number|undefined)",
                "desc": "The expected width of the text in pixels as a number (e.g. `68` for '68px'), undefined it can't be measured"
              }
            },
            {
              "name": "_get2dMeasureCanvas",
              "description": "Fetches a [CanvasRenderingContext2D](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D)\ninterface configured with the given `fontName` and `fontSize`. Caches the\ninterface so it can retrieved later without rebuilding it.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 47,
                  "column": 4
                },
                "end": {
                  "line": 62,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "fontName",
                  "type": "String",
                  "description": "A valid [CSS font-family list](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family)"
                },
                {
                  "name": "fontSize",
                  "type": "String",
                  "description": "A valid [CSS font-size](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size?v=control)"
                }
              ],
              "return": {
                "type": "CanvasRenderingContext2D"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 15,
              "column": 2
            },
            "end": {
              "line": 63,
              "column": 4
            }
          },
          "privacy": "public",
          "name": "PxAppNavBehavior.MeasureText",
          "attributes": [],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        },
        {
          "description": "Items are used to display the nav `items` as a button that can be selected.",
          "summary": "",
          "path": "px-app-nav-behaviors.es6.js",
          "properties": [
            {
              "name": "item",
              "type": "Object",
              "description": "A reference the object used to create this nav item.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 16,
                  "column": 6
                },
                "end": {
                  "line": 18,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "label",
              "type": "string",
              "description": "Used as the label text for the item.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 23,
                  "column": 6
                },
                "end": {
                  "line": 25,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "selected",
              "type": "boolean",
              "description": "Set to `true` if the item is selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 30,
                  "column": 6
                },
                "end": {
                  "line": 35,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"updateStyles\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "collapsed",
              "type": "boolean",
              "description": "Set to `true` if the item is in a collapsed dropdown.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 6
                },
                "end": {
                  "line": 45,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"updateStyles\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "cancelSelect",
              "type": "boolean",
              "description": "Cancels events that trigger selection.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 50,
                  "column": 6
                },
                "end": {
                  "line": 53,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            }
          ],
          "methods": [
            {
              "name": "attached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 56,
                  "column": 4
                },
                "end": {
                  "line": 58,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "detached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 60,
                  "column": 4
                },
                "end": {
                  "line": 62,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_propIsTypeOf",
              "description": "Checks if a property is the desired `type`.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 4
                },
                "end": {
                  "line": 72,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "prop",
                  "type": "*"
                },
                {
                  "name": "type"
                }
              ],
              "return": {
                "type": "Boolean"
              }
            },
            {
              "name": "_handleSelfTapped",
              "description": "Fire the select event so this item's parent will mark it as selected.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 77,
                  "column": 4
                },
                "end": {
                  "line": 82,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "evt"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 11,
              "column": 2
            },
            "end": {
              "line": 83,
              "column": 4
            }
          },
          "privacy": "public",
          "name": "PxAppNavBehavior.Item",
          "attributes": [
            {
              "name": "item",
              "description": "A reference the object used to create this nav item.",
              "sourceRange": {
                "start": {
                  "line": 16,
                  "column": 6
                },
                "end": {
                  "line": 18,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "label",
              "description": "Used as the label text for the item.",
              "sourceRange": {
                "start": {
                  "line": 23,
                  "column": 6
                },
                "end": {
                  "line": 25,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "selected",
              "description": "Set to `true` if the item is selected.",
              "sourceRange": {
                "start": {
                  "line": 30,
                  "column": 6
                },
                "end": {
                  "line": 35,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "collapsed",
              "description": "Set to `true` if the item is in a collapsed dropdown.",
              "sourceRange": {
                "start": {
                  "line": 40,
                  "column": 6
                },
                "end": {
                  "line": 45,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "cancel-select",
              "description": "Cancels events that trigger selection.",
              "sourceRange": {
                "start": {
                  "line": 50,
                  "column": 6
                },
                "end": {
                  "line": 53,
                  "column": 7
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  }
}
